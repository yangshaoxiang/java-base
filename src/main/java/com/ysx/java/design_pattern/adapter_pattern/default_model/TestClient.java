package com.ysx.java.design_pattern.adapter_pattern.default_model;

/**
 * author:ysx
 * Date:2018/4/20
 * Time:17:15
 * Description:参考 http://www.cnblogs.com/java-my-life/archive/2012/04/13/2442795.html
 * 在很多情况下，必须让一个具体类实现某一个接口，但是这个类又用不到接口所规定的所有的方法。
 * 通常的处理方法是，这个具体类要实现所有的方法，那些有用的方法要有实现，那些没有用的方法也要有空的、平庸的实现。
 　这些空的方法是一种浪费，有时也是一种混乱。除非看过这些空方法的代码，程序员可能会以为这些方法不是空的。
 即便他知道其中有一些方法是空的，也不一定知道哪些方法是空的，哪些方法不是空的，
 除非看过这些方法的源代码或是文档。

 　缺省适配模式可以很好的处理这一情况。可以设计一个抽象的适配器类实现接口，
 此抽象类要给接口所要求的每一种方法都提供一个空的方法。就像帮助了鲁智深的“上应天星”一样，
 此抽象类可以使它的具体子类免于被迫实现空的方法。
 */
public class TestClient {
    	public static void main(String[] args) {
            鲁智深 鲁智深 = new 鲁智深();
            鲁智深.习武();
        }

}
